// –î–æ–∂–¥–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
    
    // –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–æ–º–∞—à–∫–∏ (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö)
    function createFloatingFlowers() {
        const flowerBg = document.querySelector('.flower-bg');
        const flowers = ['üåº', 'üåª', 'üå∏', 'üå∫'];
        
        // –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–≤–µ—Ç–∫–æ–≤ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
        const isMobile = window.innerWidth <= 768;
        const interval = isMobile ? 5000 : 3000;
        const maxFlowers = isMobile ? 3 : 6;
        let currentFlowers = 0;
        
        const flowerInterval = setInterval(() => {
            if (currentFlowers >= maxFlowers) return;
            
            const flower = document.createElement('div');
            flower.className = 'floating-flower';
            flower.textContent = flowers[Math.floor(Math.random() * flowers.length)];
            flower.style.left = Math.random() * 100 + 'vw';
            flower.style.animationDuration = (Math.random() * 3 + 2) + 's';
            flower.style.opacity = Math.random() * 0.7 + 0.3;
            flower.style.fontSize = (Math.random() * 1.5 + 1) + 'rem';
            
            flowerBg.appendChild(flower);
            currentFlowers++;
            
            // –£–¥–∞–ª—è–µ–º —Ü–≤–µ—Ç–æ–∫ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
            setTimeout(() => {
                if (flower.parentNode) {
                    flower.parentNode.removeChild(flower);
                    currentFlowers--;
                }
            }, 5000);
        }, interval);
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –¥—Ä—É–≥—É—é –≤–∫–ª–∞–¥–∫—É
        document.addEventListener('visibilitychange', () => {
            if (document.hidden) {
                clearInterval(flowerInterval);
            }
        });
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –ø–∞–¥–∞—é—â–∏—Ö —Ä–æ–º–∞—à–µ–∫
    const style = document.createElement('style');
    style.textContent = `
        .floating-flower {
            position: absolute;
            top: -50px;
            pointer-events: none;
            z-index: -1;
            animation: fall linear forwards;
        }
        
        @keyframes fall {
            from {
                transform: translateY(-50px) rotate(0deg);
            }
            to {
                transform: translateY(100vh) rotate(360deg);
            }
        }
    `;
    document.head.appendChild(style);
    
    createFloatingFlowers();
    
    // –≠—Ñ—Ñ–µ–∫—Ç –ø–∞—Ä–∞–ª–ª–∞–∫—Å–∞ –¥–ª—è —Ñ–æ–Ω–æ–≤—ã—Ö —Ä–æ–º–∞—à–µ–∫
    window.addEventListener('scroll', () => {
        const scrolled = window.pageYOffset;
        const flowers = document.querySelectorAll('.flower');
        
        flowers.forEach((flower, index) => {
            const speed = 0.5 + (index * 0.1);
            flower.style.transform = `translateY(${scrolled * speed}px) rotate(${scrolled * 0.1}deg)`;
        });
    });
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);
    
    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Å–µ–º—å–∏
    document.querySelectorAll('.family-member').forEach(member => {
        member.style.opacity = '0';
        member.style.transform = 'translateY(50px)';
        member.style.transition = 'all 0.6s ease-out';
        observer.observe(member);
    });
    
    // –≠—Ñ—Ñ–µ–∫—Ç –º–µ—Ä—Ü–∞–Ω–∏—è –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞
    const giftBox = document.querySelector('.gift-box');
    if (giftBox) {
        setInterval(() => {
            giftBox.style.textShadow = `
                0 0 10px #f4d03f,
                0 0 20px #f4d03f,
                0 0 30px #f4d03f
            `;
            setTimeout(() => {
                giftBox.style.textShadow = 'none';
            }, 500);
        }, 2000);
    }
    
    // –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π touch
    document.querySelectorAll('.photo-item img').forEach(img => {
        const showEnlargedImage = function() {
            // –°–æ–∑–¥–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç —É–≤–µ–ª–∏—á–µ–Ω–∏—è
            const overlay = document.createElement('div');
            overlay.style.cssText = `
                position: fixed;
                top: 0;
                left: 0;
                width: 100vw;
                height: 100vh;
                background: rgba(0,0,0,0.8);
                display: flex;
                justify-content: center;
                align-items: center;
                z-index: 1000;
                cursor: pointer;
                -webkit-backdrop-filter: blur(5px);
                backdrop-filter: blur(5px);
            `;
            
            const enlargedImg = document.createElement('img');
            enlargedImg.src = this.src;
            enlargedImg.style.cssText = `
                max-width: 90%;
                max-height: 90%;
                border-radius: 15px;
                box-shadow: 0 20px 60px rgba(0,0,0,0.3);
                animation: zoomIn 0.3s ease-out;
                touch-action: pinch-zoom;
            `;
            
            overlay.appendChild(enlargedImg);
            document.body.appendChild(overlay);
            
            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –∏–ª–∏ touch
            overlay.addEventListener('click', () => {
                overlay.style.animation = 'fadeOut 0.3s ease-out forwards';
                setTimeout(() => {
                    if (document.body.contains(overlay)) {
                        document.body.removeChild(overlay);
                    }
                }, 300);
            });
            
            overlay.addEventListener('touchend', (e) => {
                e.preventDefault();
                overlay.click();
            });
        };
        
        img.addEventListener('click', showEnlargedImage);
        img.addEventListener('touchend', showEnlargedImage);
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —É–≤–µ–ª–∏—á–µ–Ω–∏—è
    const zoomStyle = document.createElement('style');
    zoomStyle.textContent = `
        @keyframes zoomIn {
            from {
                transform: scale(0);
                opacity: 0;
            }
            to {
                transform: scale(1);
                opacity: 1;
            }
        }
    `;
    document.head.appendChild(zoomStyle);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫
    document.querySelector('.main-title').addEventListener('click', function() {
        createConfetti();
    });
    
    function createConfetti() {
        const colors = ['#4a7c59', '#f4d03f', '#7ba05b', '#fff'];
        const confettiCount = 50;
        
        for (let i = 0; i < confettiCount; i++) {
            const confetti = document.createElement('div');
            confetti.style.cssText = `
                position: fixed;
                width: 10px;
                height: 10px;
                background: ${colors[Math.floor(Math.random() * colors.length)]};
                top: 50%;
                left: 50%;
                pointer-events: none;
                z-index: 1000;
                border-radius: 50%;
                animation: confettiFall ${Math.random() * 2 + 2}s linear forwards;
            `;
            
            document.body.appendChild(confetti);
            
            setTimeout(() => {
                if (confetti.parentNode) {
                    confetti.parentNode.removeChild(confetti);
                }
            }, 4000);
        }
    }
    
    const confettiStyle = document.createElement('style');
    confettiStyle.textContent = `
        @keyframes confettiFall {
            from {
                transform: translate(-50%, -50%) rotate(0deg);
                opacity: 1;
            }
            to {
                transform: translate(${Math.random() * 200 - 100}px, 100vh) rotate(720deg);
                opacity: 0;
            }
        }
    `;
    document.head.appendChild(confettiStyle);
    
    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –ª—É—á—à–µ–≥–æ UX
    document.documentElement.style.scrollBehavior = 'smooth';
    
    console.log('üåº –°–∞–π—Ç –¥–ª—è –ë–∞–±—ã –ò—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω! –° –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è! üåº');
});